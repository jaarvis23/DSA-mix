// Build a tree by given array and print its root and preorder traversal


import java.util.*;
class Node
{
	int data;
	Node left , right;
	Node(int d)
	{
		this.data = d;
		this.left = null;
		this.right = null;
	}
}
class Tree
{
	static int i = -1;
	Node BuildTree(int arr[])
	{
		i++;
        if(arr[i]==-1)
            return null;
        Node root = new Node(arr[i]);
        root.left = BuildTree(arr);
        root.right = BuildTree(arr);
		return root;
	}
    void preorder(Node root)
    {
        if(root==null)
            return;
        System.out.print(root.data+" ");
        preorder(root.left);
        preorder(root.right);
    }
     void LevelOrder(Node root)
    {
        if(root==null)
            return;
        Queue<Node> q = new LinkedList<>();
        q.add(root);
        q.add(null);
        while(!q.isEmpty())
        {
            Node t = q.remove();
            if(t==null)
            {
                System.out.println();
                if(q.isEmpty())
                    return;
                else
                {
                    q.add(null);
                }
            }
            else
            {
                System.out.print(t.data+" ");
                if(t.left!=null)
                    q.add(t.left);
                if(t.right!=null)
                    q.add(t.right);
            }
        }

    }
}
public class Test { 

    public static void main(String[] args) 

    { 
    	
        int arr[] = {1,2,4,-1,-1,5,-1,-1,3,-1,6,-1,-1};
    	Tree obj = new Tree();
    	Node root = obj.BuildTree(arr);
        System.out.println(root.data);
        obj.preorder(root);
	obj.LevelOrder(root);
    } 
}
